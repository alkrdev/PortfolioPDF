/*! HTML5 Boilerplate v9.0.1 | MIT License | https://html5boilerplate.com/ */

/* main.css 3.0.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

/* Base reset */
html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

body {
  margin: 0;
  height: 100vh;
  overflow: hidden;
}

/* ==========================================================================
   Layout
   ========================================================================== */
.layout {
  display: flex;
  height: 100vh;
  margin: 0;
}

/* Sidebar (desktop) */
.sidebar {
  width: 250px;
  background: #f5f5f5;
  padding: 2em 1em;
  box-sizing: border-box;
  font-family: system-ui, sans-serif;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  text-align: center;
  border-right: 1px solid #ddd;
  transition: background 0.6s ease;
  z-index: 10;
}

.sidebar h1 {
  margin: 0 0 0.25em;
  font-size: 1.5em;
  color: #222;
}

.sidebar p {
  margin: 0 0 1.5em;
  color: #555;
}

/* Sidebar button */
.sidebar button {
  padding: 0.5em 1em;
  border: none;
  background: #222;
  color: #fff;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1em;
  position: relative;
  overflow: hidden;
  transition: background 0.2s, color 0.2s;
}

.sidebar button:hover {
  background: #444;
}

/* Focus (keyboard only) */
.sidebar button:focus-visible {
  outline: 2px solid #222;
  outline-offset: 3px;
  background: #333;
}

/* Smooth fade for label */
.sidebar button span {
  display: inline-block;
  opacity: 1;
  transition: opacity 0.3s ease;
  will-change: opacity;
}

.sidebar button.fading span {
  opacity: 0;
}

/* Content area */
.content {
  flex: 1;
  height: 100vh;
  overflow: hidden;
  position: relative;
}

/* Overlay dim effect */
#overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0);
  transition: background 0.6s ease;
  pointer-events: none;
  z-index: 1;
}

/* PDF container with slide animation */
#pdf-container {
  position: absolute;
  top: 0;
  left: 100%;
  width: 100%;
  height: 100%;
  transition: transform 0.6s ease, opacity 0.6s ease;
  transform: translateX(0);
  opacity: 0;
  pointer-events: none;
  z-index: 2;
}

#pdf-container.visible {
  transform: translateX(-100%);
  opacity: 1;
  pointer-events: all;
}

/* Active states */
.content.active #overlay {
  background: rgba(0, 0, 0, 0.4);
}

.layout.active .sidebar {
  background: #eaeaea;
}

/* ==========================================================================
   Responsive Design
   ========================================================================== */

@media (max-width: 768px) {
  .layout {
    flex-direction: column;
  }

  /* Sidebar becomes fixed top bar */
  .sidebar {
    width: 100%;
    height: auto;
    border-right: none;
    border-bottom: 1px solid #ddd;
    padding: 1em;
    position: fixed;
    top: 0;
    left: 0;
    background: #f5f5f5;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    z-index: 10;
    transition:
      box-shadow 0.4s ease,
      backdrop-filter 0.4s ease,
      background-color 0.4s ease;
  }

  /* Deepen shadow and darken background when CV (overlay) is active */
  .layout.active .sidebar {
    background: #ececec;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(6px);
    -webkit-backdrop-filter: blur(6px);
  }

  .sidebar h1 {
    font-size: 1.25em;
  }

  .sidebar p {
    font-size: 0.9em;
    margin-bottom: 1em;
  }

  .content {
    margin-top: 130px;
    height: calc(100vh - 130px);
  }

  /* PDF slides vertically on small screens */
  #pdf-container {
    top: 100%;
    left: 0;
    transform: translateY(0);
  }

  #pdf-container.visible {
    transform: translateY(-100%);
  }
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visually-hidden {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .visually-hidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * The use of `table` rather than `block` is only necessary if using
 * `::before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}

